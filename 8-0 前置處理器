/*前置處理器 
  程式開始前的一段區塊，在編譯之前就會被先行處理，處理後的結果再和程式本身合併送給編譯器做編譯
  包含以#為字首的特定功能指令 ex: #include #define #ifdef 
  用途: 將特定功能的程式碼集中於同一個地方處理 => 使程式簡潔+提升程式碼的使用效率+避免相同功能的程式碼產生不同的版本*/
  
     
/*#define 
  為巨集指令 提供替代指令的功能 
  在標頭檔預定義各種程式元素 並以一個特別的識別名稱命名 包含常數 字串 一段程式碼 
  在程式中可直接透過定義的名稱進行引用 替代原有的內容 簡化程式碼的撰寫工作
  定義:
  #define dname 程式元素
  dname:取代程式元素的識別名稱
  程式元素:要定義的內容 
  
  #define的問題
  1.完成定義後 不可在程式碼中重新定義這些識別名稱 不可將其宣告為其他用途的變數=>導致程式語法錯誤
    完成定義後 所替代程式碼的名稱 如同內建的關鍵字
  2.在取名稱dname 時 也必須避開c語言內建符號和關鍵字 
    不可重新定義這些符號或關鍵字 =>程式的衝突

**關鍵字	說明
auto	聲明自動變量
short	聲明短整型變量或函數
int	    聲明整型變量或函數
long	聲明長整型變量或函數
float	聲明浮點型變量或函數
double	聲明雙精度變量或函數
char	聲明字符型變量或函數
struct	聲明結構體變量或函數
union	聲明共用數據類型
enum	聲明枚舉類型
typedef	用以給數據類型取別名
const	聲明只讀變量
unsigned	聲明無符號類型變量或函數
signed	聲明有符號類型變量或函數
extern	聲明變量是在其他文件正聲明
register	聲明寄存器變量
static	聲明靜態變量
volatile	說明變量在程序執行中可被隱含地改變
void	聲明函數無返回值或無參數，聲明無類型指針
if	條件語句
else	條件語句否定分支（與 if 連用）
switch	用於開關語句
case	開關語句分支
for	一種循環語句
do	循環語句的循環體
while	循環語句的循環條件
goto	無條件跳轉語句
continue	結束當前循環，開始下一輪循環
break	跳出當前循環
default	開關語句中的「其他」分支
sizeof	計算數據類型長度
return	子程序返回語句（可以帶參數，也可不帶參數）循環條件 
*/
